安装jdk:
当使用这个命令安装时：wget  http://download.oracle.com/otn-pub/java/jdk/8u181-b13/96a7b8442fe848ef90c96a2fad6ed6d1/jdk-8u181-linux-x64.tar.gz
	会报错：gzip: stdin: not in gzip format 
	tar: Child returned status 1 
	tar: Error is not recoverable: exiting now 
	需要加上： --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie"因为oracle公司要你接受同意没如果直接不带头格式下载后不能解压：
所以用以下方式就可以了：wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u181-b13/96a7b8442fe848ef90c96a2fad6ed6d1/jdk-8u181-linux-x64.tar.gz
解压：tar -zxvf jdk-8u181-linux-x64.tar.gz
jdk环境配置：
		vim /etc/profile
		export JAVA_HOME=/java/jdk1.8.0_181
		export CLASSPATH=$JAVA_HOME/lib/
		export PATH=$PATH:$JAVA_HOME/bin
		export PATH JAVA_HOME CLASSPATH
		
		export JAVA_HOME=/root/java/jdk1.8.0_181
		export JRE_HOME=$JAVA_HOME/jre
		exportCLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
		export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH
点击esc等下面的insert发生变化输入:qw保存并退出
保存生效：source /etc/profile
重启机器：sudo shutdown -r now
输入查看是否生效：javac -version

卸载.gz：rm -rf /java/ jdk-8u181-linux-x64.tar.gz

tomcat：
地址去官网看Tomcat的liunx版本的下载的链接直接使用命令wget http://mirrors.shu.edu.cn/apache/tomcat/tomcat-9/v9.0.12/bin/apache-tomcat-9.0.12.tar.gz
解压：tar zxvf  apache-tomcat-9.0.12.tar.gz;
配置Tomcat环境：
		编辑文件：vim  /etc/profile 
					export CATALINA_HOME=/root/java/apache-tomcat-9.0.16
					export CATALINA_HOME
					点击esc等下面的insert发生变化输入:qw保存并退出
		启用配置文件：source /etc/profile
	查看Tomcat的环境 ：echo  $CATALINA_HOME
	启动tomcat ：cd /java/ apache-tomcat-9.0.12/bin
				执行常用命令：./startup.sh启动
	或者使用：$ sudo service apache-tomcat-9.0.12 start    //启动  
				$ sudo service apache-tomcat-9.0.12 restart  //重启  
				$ sudo service apache-tomcat-9.0.12 stop     //停止  
	卸载：sudo apt-get autoremove  apache-tomcat-9.0.12 ；
	这样就可以直接访问了8080断就就可以直接访问了
安装mysql:
查看自带mysql输入 rpm -qa | grep mysql
在 Ubuntu 16.04 中，默认情况下，只有最新版本的 MySQL 包含在 APT 软件包存储库中。在撰写本文时，那是 MySQL 5.7
要安装它，只需更新服务器上的包索引并安装默认包 apt-get。
安装执行以下命令：
sudo apt-get update
sudo apt-get install mysql-server
配置远程连接
	/etc/mysql/mysql.conf.d/mysqld.cnf
	将bind-address = 127.0.0.1修改为bind-address = 0.0.0.0
	加入：character-set-server=utf8使其使用utf-8编码
	重新启动并登陆mysql
	sudo service mysql restart
	2 mysql -uroot -p
	修改权限：
	GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'yourpassword' WITH GRANT OPTION;
	FLUSH PRIVILEGES;
	重新启动mysql
	sudo service mysql restart
	注意：有时重启服务器后mysql未启动导致远程无法连接只需启动mysql
	sudo service mysql start
	这样就可以直接连接了
系统将提示您在安装过程中创建 root 密码。选择一个安全的密码，并确保你记住它，因为你以后需要它。接下来，我们将完成 MySQL 的配置。
步骤2 – 配置MySQL
因为是全新安装，您需要运行附带的安全脚本。这会更改一些不太安全的默认选项，例如远程 root 登录和示例用户。在旧版本的 MySQL 上，您需要手动初始化数据目录，但 Mysql 5.7 已经自动完成了。
运行安全脚本。
sudo mysql_secure_installation
这将提示您输入您在步骤1中创建的 root 密码。您可以按 Y，然后 ENTER 接受所有后续问题的默认值，但是要询问您是否要更改 root 密码。您只需在步骤 1 中进行设置即可，因此无需现在更改。
最后，我们来测试MySQL安装。
步骤3 – 测试MySQL
按上边方式安装完成后，MySQL应该已经开始自动运行了。要测试它，请检查其状态。
systemctl status mysql.service
如果MySQL没有运行，您可以启动它：sudo systemctl mysql start
如果额外的检查，您可以尝试使用该 mysqladmin 工具连接到数据库，该工具是允许您运行管理命令的客户端。例如，该命令表示以 root（-u root）方式连接到 MySQL ，提示输入密码（-p）并返回版本。
mysqladmin -p -u root version	


卸载mysql:
			sudo apt purge mysql-*
			sudo rm -rf /etc/mysql/ /var/lib/mysql
			sudo apt autoremove
			sudo apt autoreclean

安装mysql5.5：wget http://dev.mysql.com/get/Downloads/MySQL-5.5/mysql-5.5.46-linux2.6-x86_64.tar.gz

Linux常用的命令：
			目录切换：
			cd usr		切换到该目录下usr目录 	
			cd ../		切换到上一层目录
			cd /		切换到系统根目录
			cd ~		切换到用户主目录
			cd -		切换到上一个所在目录
			查看目录： ls
			查看所有文件及目录(包括隐藏的)： ls -a
			该目录下所有目录和文件的详细信息:ls -l  可以显示出文件的权限：
			如：drwxr-xr-x   对应的是：文件类型，读取权，写入权，执行权，
			d：代表目录
			-：代表文件
			l：代表链接（可以认为是window中的快捷方式）
			后面的9位分为3组，每3位置一组，分别代表属主的权限，与当前用户同组的	用户的权限，其他用户的权限
			r：代表权限是可读，r也可以用数字4表示
			w：代表权限是可写，w也可以用数字2表示
			x：代表权限是可执行，x也可以用数字1表示

			查找目录：find 目录 参数
			修改目录名称(包括压缩包)：mv 目录名称 新目录名称
			移动目录：mv 目录名称 目录的新位置
			创建一个目录 ：mkdir 目录名       
			创建目录：mkdir -pv  ./abc/123:创建层级目录
			删除目录：rm  目录 都可直接使用 rm -rf 目录/文件/压缩包
			强制删除文件：rm -f ./xxx.x
			文件创建： touch 文件名称 touch aaa.txt
			文件查看：cat/more/less/tail 文件
			编辑文件：vim  /etc/profile     底行输入:wq退出并保存
			解压缩：
			tar命令  -c 是压缩
			-x是解压
			-z是否需要解压gzip压缩
			-v压缩过程中显示文件
			-f 使用档名在f 之后立即接档名
			压缩：tar -zcvf xxx.tar ./目标文件目录
			解压：tar -zxvf 文件名
			解压到指定目录： tar -zxvf xx.tar.gz -C /目标目录
			显示当前所在的位置：pwd
			查看端口：netstat -an
			--help:是所用的命令的帮助命令的信息
			stat 显示指定的相关的信息， stat [OPTION] ...file...
			who 显示在线登录用户
			top:显示总的内存数
		编辑器的使用：
			vim的使用：
			i键：是插入模式，先按esc到命令模式
			有以下模式：
			:q 退出
			:wq 保存并退出
			:q!强制退出
			:w file 将当前的文件保存
			:set number在编辑文件显示行号
			:set nonumber在编辑器不显示行号
		软件包管理：
			安装：apt-get install packagename
			删除：apt-get remove packagename
			更新：apt-get upgrate
			搜索：apt-cache search package
			获取包信息：apt-cache show package
			删除包及配置文件：apt-get remove package --purge
			清楚无用的包：apt -clean  && apt-get autoreclean
			检查是否损坏的依赖：apt-get cheack
		用户管理：
			设置Root账号密码：sudo passwd root
			切换到Root:su
			设置允许远程登录：
				vim /etc/ssh/sshd_config
				编辑以下：
					# Authentication:
					LoginGraceTime 120
					#PermitRootLogin without-password     //注释此行
					PermitRootLogin yes                             //加入此行
					StrictModes yes

					重启服务
					service ssh restart
		配置java环境变量：
			vim /etc/environment
			PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
			export JAVA_HOME=/usr/local/java/jdk1.8.0_181
			export JRE_HOME=/usr/local/java/jdk1.8.0_181/jre
			export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib
			vim /etc/profile
				if [ "$PS1" ]; then
				if [ "$BASH" ] && [ "$BASH" != "/bin/sh" ]; then
					# The file bash.bashrc already sets the default PS1.
					# PS1='\h:\w\$ '
					if [ -f /etc/bash.bashrc ]; then
					. /etc/bash.bashrc
					fi
				else
					if [ "`id -u`" -eq 0 ]; then
					PS1='# '
					else
					PS1='$ '
					fi
				fi
				fi

				export JAVA_HOME=/usr/local/java/jdk1.8.0_181
				export JRE_HOME=/usr/local/java/jdk1.8.0_181/jre
				export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib
				export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH:$HOME/bin

				if [ -d /etc/profile.d ]; then
				for i in /etc/profile.d/*.sh; do
					if [ -r $i ]; then
					. $i
					fi
				done
				unset i
				fi
			source /etc/profile
利用putty来链接服务器传输文件和操作：
	去官网直接下载：https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html
	下载后：点击putty.exe 然后把你的实例的公网IP地址输入就可以直接连上去操作了：
				打开psftp:
				首先需要登陆远程服务器：open hostname
				然后输入用户名和密码login
				进入之后就是类似于 linux的shell命令
				比如 pwd ls cd put get
				由于是远程登陆， 涉及到remote 和local两个工作路径
				cd ls pwd这一套都是remote的
				local的就在前面加l前缀，比如
				lcd lls lpwd都是local的
				put filename 用于把本地当前路劲的filename文件上传到remote的当前路径
				get filename 用于把remote的当前路径的filename文件下载到local的当前路径
				用命令行的形式上传到服务器：本地目录--->目标目录
				上传单个：put E:/node/chrunlee/app.js /home/ubuntu/app.js 
				上传目录：put -r E:/源数据代码/love  /java/love
				直接上传到 /java/apache-tomcat-9.0.12/webapps/love这样就可以直接访问了
				移动文件的命令：mv love /java/apache-tomcat-9.0.12/webapps;这样就可以直接访问：
				上传文件或者文件夹时要把上传到目标文件中带上你需要上传的文件名：put -r E:/源数据代码/love  /java/love;如果不带的话就会把文件夹中的所有文件放到java目录下了
				你可以通过命令来查看你的webapps下面有多少文件及目录: cd /java/apache-tomcat-9.0.12/webapps --->然后命令 ls 就可以看到目录下有多少文件了：
				同样可以直接用putty把软件给传输到你的服务器中
apache存储目录：
		var/www/execise
		var/www/stuResource
spring boot 后台运行命令：
			 nohup java -jar portal.jar > /root/java/log/portal_log.log 2>&1 &

下载的所有的应用程序安装必须放在：usr/local目录下

	free -h 查看内存
	


